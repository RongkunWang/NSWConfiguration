## GitLab CI template for NSW DAQ build and test jobs
## Import the common build jobs, and use the definitions for the
## NSWConfiguration specific test jobs

include:
  - project: 'atlas-muon-nsw-daq/nsw-build-scripts'
    ref: master
    file: '.gitlab/ci/build.yml'

#### Unit test jobs #################################################################
.test:
  image: gitlab-registry.cern.ch/atlas-tdaq-software/tdaq_ci:centos7
  stage: test
  before_script:
    - yum install -y python3
    - !reference [.build_setup]
  script:
    - unset PYTHONPATH
    - unset PYTHONHOME
    - export LD_LIBRARY_PATH=${FELIX_RELEASE_BASE}/${FELIX_RELEASE}/${COMPILER_PROFILE}/lib:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=${INSTALL_DIR}/${COMPILER_PROFILE}/lib:${LD_LIBRARY_PATH}
    - /usr/bin/python3 ./test/run_unit_tests.py -d ${TESTS_BIN_DIR}/ -o junit.xml
  artifacts:
    when: always
    paths:
      - junit.xml
    reports:
      junit: junit.xml

## Current stable TDAQ release
test:stable:
  extends: .test
  allow_failure: false
  needs:
    - build:stable
  rules:
    - !reference [.stable, rules]
  parallel:
    !reference [.stable, parallel]

## Unstable TDAQ releases, allowed to fail
test:alternate:
  extends: .test
  allow_failure: true
  needs:
    - build:alternate
  rules:
    - !reference [.alternate, rules]
  parallel:
    !reference [.alternate, parallel]

## Nightly TDAQ releases, allowed to fail
test:nightly:
  extends: test:stable
  allow_failure: true
  needs:
    - build:nightly
  rules:
    - !reference [.nightly, rules]
  variables:
    !reference [.nightly, variables]
  parallel:
    !reference [.nightly, parallel]

## Production version tests
test:release:
  extends: .test
  allow_failure: true
  needs:
    - build:release
  rules:
    - !reference [.release, rules]
  parallel:
    !reference [.release, parallel]
